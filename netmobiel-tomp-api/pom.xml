<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>eu.netmobiel</groupId>
        <artifactId>netmobiel-parent-pom</artifactId>
        <version>0.2.0-SNAPSHOT</version>
        <relativePath>../netmobiel-parent-pom/pom.xml</relativePath>
    </parent>
    <artifactId>netmobiel-tomp-api</artifactId>
    <packaging>jar</packaging>
    <name>NetMobiel TOMP API</name>
    <description>The TOMP API - The MaaS - Transport Operator interopability API.</description>
    <url>https://github.com/SaxionSmartCities/netmobiel-platform/netmobiel-tomp-api</url>
	<properties>
	</properties>
    <build>
        <!-- Set the name of the WAR. Jboss-web determines the context root when the app is deployed -->
        <finalName>${project.artifactId}-${project.version}</finalName>
        <plugins>
			<plugin>
				<groupId>io.swagger.codegen.v3</groupId>
				<artifactId>swagger-codegen-maven-plugin</artifactId>
				<!-- This is a particular tricky configuration due to the many bugs in the generators.
					 The model generation works fine only in jaxrs-cxf-client, but not in the jaxrs-spec.
					 The API generation works fine in jaxrs-spec, but the model has issues with missing jackson imports.
					 jaxrs-resteasy-eap generates wrong model, import of hashMap is missing. Also the package declaration and 
					 of the generated implementation is garbled. 
					 The jaxrs-resteasy garbles the model even more, enums are not correct.
					 Etcetera. Drives me crazy, but the configuration below takes a very small path between the rocks.
				 -->
	            <configuration>
					<configHelp>false</configHelp>
	                <inputSpec>${project.basedir}/TOMP-API-netmobiel.yaml</inputSpec>
	            	<apiPackage>eu.netmobiel.tomp.api</apiPackage>
	            	<modelPackage>eu.netmobiel.tomp.api.model</modelPackage>
	            	<invokerPackage>eu.netmobiel.tomp.api.rest</invokerPackage>
		        </configuration>
			    <executions>
			        <execution>
			        	<id>tomp-api-model</id>
			            <goals>
			                <goal>generate</goal>
			            </goals>
			            <configuration>
							<language>java</language>
							<configOptions>
								<library>resteasy</library>
							</configOptions>
			            	<apiPackage>eu.netmobiel.tomp.client.impl</apiPackage>
			            	<invokerPackage>eu.netmobiel.tomp.client</invokerPackage>
							<generateApis>true</generateApis>
							<generateModels>true</generateModels>
							<generateSupportingFiles>true</generateSupportingFiles>
			            </configuration>
			        </execution>
			        <execution>
			        	<id>tomp-api-interface</id>
			            <goals>
			                <goal>generate</goal>
			            </goals>
			            <configuration>
							<language>jaxrs-spec</language>
							<configOptions>
								<!--  Generate the API only, no implementation, e.g. a server stub -->
								<interfaceOnly>true</interfaceOnly>
								<generatePom>false</generatePom>
								<returnResponse>true</returnResponse>
							</configOptions>
							<generateApis>true</generateApis>
							<generateModels>false</generateModels>
			            </configuration>
			        </execution>
			    </executions>
			</plugin>
        	<plugin>
		        <groupId>net.revelc.code</groupId>
		        <artifactId>impsort-maven-plugin</artifactId>
				<configuration>
					<directories>
						<directory>target/generated-sources/swagger/src/main/java</directory>
					</directories>
				</configuration>
	        </plugin>
		</plugins>
    </build>

    <dependencies>
        <!-- Import the JAX-RS API, we use provided scope as the API is included
            in JBoss EAP 
		-->
        <dependency>
            <groupId>org.jboss.spec.javax.ws.rs</groupId>
            <artifactId>jboss-jaxrs-api_2.1_spec</artifactId>
            <scope>provided</scope>
        </dependency>
        <!-- Import the Common Annotations API (JSR-250), we use provided scope
            as the API is included in JBoss EAP 
		-->
        <dependency>
            <groupId>org.jboss.spec.javax.annotation</groupId>
            <artifactId>jboss-annotations-api_1.3_spec</artifactId>
            <scope>provided</scope>
        </dependency>
		<dependency>
    		<groupId>com.fasterxml.jackson.core</groupId>
    		<artifactId>jackson-annotations</artifactId>
            <scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-core</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
		    <groupId>com.fasterxml.jackson.datatype</groupId>
		    <artifactId>jackson-datatype-jsr310</artifactId>
			<scope>provided</scope>
		</dependency>
		<!-- https://mvnrepository.com/artifact/io.swagger/swagger-annotations -->
		<dependency>
		    <groupId>io.swagger.core.v3</groupId>
		    <artifactId>swagger-annotations</artifactId>
		</dependency>
		<dependency>
		    <groupId>io.swagger</groupId>
		    <artifactId>swagger-annotations</artifactId>
		</dependency>
<!-- 		<dependency> -->
<!-- 	        <groupId>javax.validation</groupId> -->
<!-- 	        <artifactId>validation-api</artifactId> -->
<!-- 		    <scope>provided</scope> -->
<!--         </dependency> -->
        <dependency>
            <groupId>org.jboss.resteasy</groupId>
            <artifactId>resteasy-client</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
	   		<groupId>org.jboss.resteasy</groupId>
	   		<artifactId>resteasy-multipart-provider</artifactId>
            <scope>provided</scope>
        </dependency>
    </dependencies>

</project>
