<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>eu.netmobiel</groupId>
        <artifactId>netmobiel-parent-pom</artifactId>
        <version>0.2.0-SNAPSHOT</version>
        <relativePath>../netmobiel-parent-pom/pom.xml</relativePath>
    </parent>
    <artifactId>netmobiel-banker-rest</artifactId>
    <packaging>war</packaging>
    <name>NetMobiel Credit REST Service</name>
    <description>The credit REST service for the NetMobiel Mobility-as-a-Service application.</description>
	<properties>
	</properties>
    <build>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>false</filtering>
            </resource>
            <resource>
                <directory>src/main/resources-filtered</directory>
                <filtering>true</filtering>
            </resource>
        </resources>
        <plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<annotationProcessorPaths>
						<path>
							<groupId>org.mapstruct</groupId>
							<artifactId>mapstruct-processor</artifactId>
							<version>${version.org.mapstruct}</version>
						</path>
                    </annotationProcessorPaths>
					<compilerArgs>
			            <compilerArg>
			                -Amapstruct.defaultComponentModel=cdi
			            </compilerArg>
			        </compilerArgs>
				</configuration>
			</plugin>
        </plugins>
    </build>

    <dependencies>
		<dependency>
		    <groupId>${project.groupId}</groupId>
		    <artifactId>netmobiel-commons</artifactId>
		    <version>${project.version}</version>
		    <scope>provided</scope>
		</dependency>
		<dependency>
		    <groupId>${project.groupId}</groupId>
		    <artifactId>netmobiel-banker-api</artifactId>
		    <version>${project.version}</version>
		    <scope>provided</scope>
		</dependency>
		<dependency>
		    <groupId>${project.groupId}</groupId>
		    <artifactId>netmobiel-banker-ejb</artifactId>
		    <version>${project.version}</version>
		    <scope>provided</scope>
		</dependency>
		
        <dependency>
            <groupId>javax.enterprise</groupId>
            <artifactId>cdi-api</artifactId>
            <scope>provided</scope>
        </dependency>

		<!-- EJB interfaces, i.e. the exceptions -->
        <dependency>
            <groupId>org.jboss.spec.javax.ejb</groupId>
            <artifactId>jboss-ejb-api_3.2_spec</artifactId>
            <scope>provided</scope>
        </dependency>

		<!-- Required to prevent enum warnings like '[WARNING] unknown enum constant javax.persistence.GenerationType.SEQUENCE' -->
        <dependency>
            <groupId>javax.persistence</groupId>
            <artifactId>javax.persistence-api</artifactId>
            <scope>provided</scope>
        </dependency>
		<!--  Bean validation -->
		<dependency>
	        <groupId>javax.validation</groupId>
	        <artifactId>validation-api</artifactId>
		    <scope>provided</scope>
        </dependency>

        <dependency>
          <groupId>org.jboss.spec.javax.el</groupId>
          <artifactId>jboss-el-api_3.0_spec</artifactId>
          <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.jboss.spec.javax.annotation</groupId>
            <artifactId>jboss-annotations-api_1.3_spec</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.spec.javax.ws.rs</groupId>
            <artifactId>jboss-jaxrs-api_2.1_spec</artifactId>
            <scope>provided</scope>
        </dependency>
        <!-- For resteasy registry display -->
        <dependency>
        	<groupId>org.jboss.resteasy</groupId>
        	<artifactId>resteasy-jaxb-provider</artifactId>
			<scope>provided</scope>
		</dependency>
		<!-- for automatic scanning ?  -->
		<dependency>
		    <groupId>org.jboss.resteasy</groupId>
		    <artifactId>resteasy-servlet-initializer</artifactId>
		    <version>3.7.0.Final</version>
			<scope>provided</scope>
			<exclusions>
				<exclusion>
					<groupId>org.jboss.logging</groupId>
					<artifactId>jboss-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.jboss.resteasy</groupId>
			<artifactId>resteasy-jackson2-provider</artifactId>
			<scope>provided</scope>
			<exclusions>
				<exclusion>
					<groupId>org.jboss.logging</groupId>
					<artifactId>jboss-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-core</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-annotations</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
		    <groupId>com.fasterxml.jackson.datatype</groupId>
		    <artifactId>jackson-datatype-jsr310</artifactId>
			<scope>provided</scope>
		</dependency>
		
        <!-- Import the servlet spec, we use provided scope as the API is included
            in JBoss EAP 
        -->
        <dependency>
            <groupId>org.jboss.spec.javax.servlet</groupId>
            <artifactId>jboss-servlet-api_4.0_spec</artifactId>
            <scope>provided</scope>
        </dependency>

        <!-- Keycloak adapter is added to WildFly instance. The library is therefore provided. -->
        <dependency>
            <groupId>org.keycloak</groupId>
            <artifactId>keycloak-authz-client</artifactId>
		    <scope>provided</scope>
		    <exclusions>
		    	<exclusion>
		    		<groupId>org.jboss.logging</groupId>
		    		<artifactId>jboss-logging</artifactId>
		    	</exclusion>
		    </exclusions>
        </dependency>
        <dependency>
            <groupId>org.keycloak</groupId>
            <artifactId>keycloak-adapter-core</artifactId>
		    <scope>provided</scope>
        </dependency>
        <!--  Add the SPI as well, otherwise maven will complain -->
        <dependency>
            <groupId>org.keycloak</groupId>
            <artifactId>keycloak-adapter-spi</artifactId>
		    <scope>provided</scope>
        </dependency>
		<!-- Bean Mapper -->
		<dependency>
			<groupId>org.mapstruct</groupId>
			<artifactId>mapstruct</artifactId>
            <scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.vividsolutions</groupId>
			<artifactId>jts-core</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
		    <groupId>nl.garvelink.oss</groupId>
		    <artifactId>iban</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
		    <groupId>org.apache.commons</groupId>
		    <artifactId>commons-lang3</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- TEST Dependencies -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- Optional, but highly recommended -->
        <!-- Arquillian allows you to test enterprise code such as EJBs and Transactional(JTA)
            JPA from JUnit/TestNG 
		-->
        <dependency>
            <groupId>org.jboss.arquillian.junit</groupId>
            <artifactId>arquillian-junit-container</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.jboss.arquillian.protocol</groupId>
            <artifactId>arquillian-protocol-servlet</artifactId>
            <scope>test</scope>
        </dependency>
		<dependency>
		    <groupId>org.jboss.shrinkwrap.resolver</groupId>
		    <artifactId>shrinkwrap-resolver-impl-maven</artifactId>
		    <scope>test</scope>
		</dependency>

		<!-- For testing constraints -->
        <dependency>
            <groupId>org.hibernate.validator</groupId>
            <artifactId>hibernate-validator</artifactId>
            <scope>test</scope>
        </dependency>
		<!-- Needed by hibernate validator -->
        <dependency>
            <groupId>org.jboss.logmanager</groupId>
            <artifactId>jboss-logmanager</artifactId>
            <scope>test</scope>
        </dependency>

    </dependencies>

</project>
